#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞
 *
 * –í—ã–ø–æ–ª–Ω—è–µ—Ç:
 * 1. –ü—Ä–æ–≤–µ—Ä–∫—É –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
 * 2. –ü–æ–∏—Å–∫ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –æ–ø–∞—Å–Ω—ã—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ –∫–æ–¥–∞
 * 3. –ë–∞–∑–æ–≤—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
 * 4. –ü—Ä–æ–≤–µ—Ä–∫—É –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞—â–∏—Ç–Ω—ã—Ö –º–µ—Ö–∞–Ω–∏–∑–º–æ–≤
 *
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node scripts/security-check.js
 */

import fs from 'fs/promises';
import path from 'path';
import { fileURLToPath } from 'url';
import chalk from 'chalk';
import dotenv from 'dotenv';

// –î–ª—è ES Modules –ø–æ–ª—É—á–∞–µ–º __dirname
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);
const rootDir = path.resolve(__dirname, '..');

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config({ path: path.join(rootDir, '.env') });

// –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
const securityState = {
  errors: 0,
  warnings: 0,
  suggestions: 0,
  passed: 0
};

// –í—ã–≤–æ–¥ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
const log = {
  error: (message) => {
    securityState.errors++;
    console.log(chalk.red(`‚ùå –û–®–ò–ë–ö–ê: ${message}`));
  },
  warning: (message) => {
    securityState.warnings++;
    console.log(chalk.yellow(`‚ö†Ô∏è –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: ${message}`));
  },
  suggestion: (message) => {
    securityState.suggestions++;
    console.log(chalk.blue(`üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø: ${message}`));
  },
  success: (message) => {
    securityState.passed++;
    console.log(chalk.green(`‚úÖ –£–°–ü–ï–•: ${message}`));
  },
  info: (message) => {
    console.log(chalk.cyan(`‚ÑπÔ∏è –ò–ù–§–û: ${message}`));
  },
  section: (title) => {
    console.log('\n' + chalk.bold.underline(title) + '\n');
  }
};

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
 */
async function checkEnvVariables() {
  log.section('–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');

  const requiredVars = [
    { name: 'VITE_SUPABASE_URL', critical: true },
    { name: 'VITE_SUPABASE_ANON_KEY', critical: true },
    { name: 'TELEGRAM_BOT_TOKEN', critical: false },
    { name: 'TELEGRAM_CHAT_ID', critical: false },
    { name: 'PORT', critical: false, defaultValue: '3002' },
    { name: 'NODE_ENV', critical: false, defaultValue: 'development' },
    { name: 'API_KEY', critical: false },
    { name: 'COOKIE_SECRET', critical: true }
  ];

  for (const v of requiredVars) {
    const value = process.env[v.name];

    if (!value) {
      if (v.critical) {
        log.error(`–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è: ${v.name}`);
      } else if (v.defaultValue) {
        log.warning(`–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è: ${v.name}, –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: ${v.defaultValue}`);
      } else {
        log.warning(`–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è: ${v.name}`);
      }
    } else {
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª–∏–Ω—ã –∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ —Å–µ–∫—Ä–µ—Ç–æ–≤
      if (v.name.includes('KEY') || v.name.includes('TOKEN') || v.name.includes('SECRET')) {
        if (value.length < 16) {
          log.warning(`–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è ${v.name} —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∞—è (${value.length} —Å–∏–º–≤–æ–ª–æ–≤), —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –Ω–µ –º–µ–Ω–µ–µ 16 —Å–∏–º–≤–æ–ª–æ–≤`);
        } else {
          log.success(`–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è ${v.name} –∑–∞–¥–∞–Ω–∞ –∏ –∏–º–µ–µ—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω—É—é –¥–ª–∏–Ω—É`);
        }
      } else {
        log.success(`–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è ${v.name} –∑–∞–¥–∞–Ω–∞`);
      }
    }
  }
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –æ–ø–∞—Å–Ω—ã—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ –≤ –∫–æ–¥–µ
 */
async function checkVulnerablePatterns() {
  log.section('–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π –≤ –∫–æ–¥–µ');

  const targetDirs = [
    'src',
    'server',
    'server/api',
    'server/middleware',
    'public'
  ];

  const vulnerablePatterns = [
    {
      pattern: /eval\s*\(/g,
      description: '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ eval() –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –∏–Ω—ä–µ–∫—Ü–∏—è–º –∫–æ–¥–∞',
      severity: 'high'
    },
    {
      pattern: /process\.env\.[A-Z_]+/g,
      description: '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ process.env –Ω–∞–ø—Ä—è–º—É—é –º–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å –æ—à–∏–±–∫—É –≤ ESM –º–æ–¥—É–ª—è—Ö',
      severity: 'medium'
    },
    {
      pattern: /console\.log\s*\(/g,
      description: '–í—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å –º–æ–∂–µ—Ç —Ä–∞—Å–∫—Ä—ã–≤–∞—Ç—å –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é',
      severity: 'low'
    },
    {
      pattern: /innerHTML|outerHTML/g,
      description: '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ innerHTML/outerHTML –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ XSS –∞—Ç–∞–∫–∞–º',
      severity: 'high'
    },
    {
      pattern: /dangerouslySetInnerHTML/g,
      description: 'dangerouslySetInnerHTML –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ XSS –∞—Ç–∞–∫–∞–º',
      severity: 'high'
    },
    {
      pattern: /\.raw\s*\(/g,
      description: '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ raw SQL –∑–∞–ø—Ä–æ—Å–æ–≤ –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏–∑–∞—Ü–∏–∏ –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ SQL –∏–Ω—ä–µ–∫—Ü–∏—è–º',
      severity: 'high'
    },
    {
      pattern: /document\.write\s*\(/g,
      description: 'document.write –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ XSS –∞—Ç–∞–∫–∞–º',
      severity: 'high'
    },
    {
      pattern: /localStorage\.|sessionStorage\./g,
      description: '–•—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ localStorage/sessionStorage –Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω–æ',
      severity: 'medium'
    }
  ];

  // –°—á–µ—Ç—á–∏–∫–∏
  const issues = {
    high: 0,
    medium: 0,
    low: 0
  };

  // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã JS/TS/Vue –≤ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è—Ö
  const allFiles = [];

  for (const dir of targetDirs) {
    try {
      const fullPath = path.join(rootDir, dir);
      await scanDirectory(fullPath, allFiles);
    } catch (error) {
      log.warning(`–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—Å–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é ${dir}: ${error.message}`);
    }
  }

  log.info(`–ù–∞–π–¥–µ–Ω–æ ${allFiles.length} —Ñ–∞–π–ª–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏`);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π —Ñ–∞–π–ª –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —É—è–∑–≤–∏–º—ã—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤
  for (const filePath of allFiles) {
    try {
      const content = await fs.readFile(filePath, 'utf8');
      const relPath = path.relative(rootDir, filePath);

      for (const { pattern, description, severity } of vulnerablePatterns) {
        const matches = content.match(pattern);

        if (matches && matches.length > 0) {
          issues[severity]++;

          switch(severity) {
            case 'high':
              log.error(`–í —Ñ–∞–π–ª–µ ${relPath} –Ω–∞–π–¥–µ–Ω–∞ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è —É—è–∑–≤–∏–º–æ—Å—Ç—å: ${description} (${matches.length} –≤—Ö–æ–∂–¥–µ–Ω–∏–π)`);
              break;
            case 'medium':
              log.warning(`–í —Ñ–∞–π–ª–µ ${relPath} –Ω–∞–π–¥–µ–Ω –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω—ã–π –∫–æ–¥: ${description} (${matches.length} –≤—Ö–æ–∂–¥–µ–Ω–∏–π)`);
              break;
            case 'low':
              log.suggestion(`–í —Ñ–∞–π–ª–µ ${relPath} –Ω–∞–π–¥–µ–Ω –∫–æ–¥, —Ç—Ä–µ–±—É—é—â–∏–π –≤–Ω–∏–º–∞–Ω–∏—è: ${description} (${matches.length} –≤—Ö–æ–∂–¥–µ–Ω–∏–π)`);
              break;
          }
        }
      }
    } catch (error) {
      log.warning(`–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ñ–∞–π–ª ${filePath}: ${error.message}`);
    }
  }

  if (issues.high === 0 && issues.medium === 0 && issues.low === 0) {
    log.success('–£—è–∑–≤–∏–º—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –≤ –∫–æ–¥–µ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã');
  } else {
    log.info(`–ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ–±–ª–µ–º: ${issues.high} –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö, ${issues.medium} —Å—Ä–µ–¥–Ω–∏—Ö, ${issues.low} –Ω–µ–∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã—Ö`);
  }
}

/**
 * –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤
 */
async function scanDirectory(directory, foundFiles) {
  try {
    const items = await fs.readdir(directory, { withFileTypes: true });

    for (const item of items) {
      const itemPath = path.join(directory, item.name);

      // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º node_modules –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–±–æ—Ä–∫–∏
      if (item.name === 'node_modules' || item.name === 'dist' || item.name === '.git') {
        continue;
      }

      if (item.isDirectory()) {
        await scanDirectory(itemPath, foundFiles);
      } else if (
        item.isFile() &&
        (itemPath.endsWith('.js') ||
         itemPath.endsWith('.ts') ||
         itemPath.endsWith('.vue') ||
         itemPath.endsWith('.jsx') ||
         itemPath.endsWith('.tsx'))
      ) {
        foundFiles.push(itemPath);
      }
    }
  } catch (error) {
    log.warning(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ ${directory}: ${error.message}`);
  }
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
 */
async function checkSecurityConfiguration() {
  log.section('–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏');

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤ –∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫
  const requiredFiles = [
    { path: 'server/middleware/csrfProtection.js', description: 'CSRF –∑–∞—â–∏—Ç–∞' },
    { path: 'server/middleware/apiSecurity.js', description: '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å API' },
    { path: 'server/utils/env.js', description: '–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è' },
    { path: 'server/tools/validateEnv.js', description: '–í–∞–ª–∏–¥–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è' }
  ];

  for (const file of requiredFiles) {
    try {
      await fs.access(path.join(rootDir, file.path));
      log.success(`–ù–∞–π–¥–µ–Ω —Ñ–∞–π–ª ${file.path} (${file.description})`);
    } catch (error) {
      log.error(`–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ–∞–π–ª ${file.path} (${file.description})`);
    }
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ CSP –≤ index.js
  try {
    const indexContent = await fs.readFile(path.join(rootDir, 'server/index.js'), 'utf8');

    if (indexContent.includes('contentSecurityPolicy')) {
      log.success('–ù–∞—Å—Ç—Ä–æ–µ–Ω–∞ –ø–æ–ª–∏—Ç–∏–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ (CSP)');
    } else {
      log.warning('–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–ª–∏—Ç–∏–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ (CSP)');
    }

    if (indexContent.includes('helmet(')) {
      log.success('–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø–∞–∫–µ—Ç helmet –¥–ª—è –∑–∞—â–∏—Ç—ã HTTP-–∑–∞–≥–æ–ª–æ–≤–∫–æ–≤');
    } else {
      log.error('–ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø–∞–∫–µ—Ç helmet –¥–ª—è –∑–∞—â–∏—Ç—ã HTTP-–∑–∞–≥–æ–ª–æ–≤–∫–æ–≤');
    }

    if (indexContent.includes('xss')) {
      log.success('–í–Ω–µ–¥—Ä–µ–Ω–∞ –∑–∞—â–∏—Ç–∞ –æ—Ç XSS –∞—Ç–∞–∫');
    } else {
      log.error('–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∑–∞—â–∏—Ç–∞ –æ—Ç XSS –∞—Ç–∞–∫');
    }

    if (indexContent.includes('rateLimit')) {
      log.success('–ù–∞—Å—Ç—Ä–æ–µ–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —á–∞—Å—Ç–æ—Ç—ã –∑–∞–ø—Ä–æ—Å–æ–≤ (rate limiting)');
    } else {
      log.warning('–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —á–∞—Å—Ç–æ—Ç—ã –∑–∞–ø—Ä–æ—Å–æ–≤ (rate limiting)');
    }

    if (indexContent.includes('CSRF') || indexContent.includes('csrf')) {
      log.success('–ù–∞—Å—Ç—Ä–æ–µ–Ω–∞ –∑–∞—â–∏—Ç–∞ –æ—Ç CSRF –∞—Ç–∞–∫');
    } else {
      log.error('–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∑–∞—â–∏—Ç–∞ –æ—Ç CSRF –∞—Ç–∞–∫');
    }

  } catch (error) {
    log.warning(`–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤ server/index.js: ${error.message}`);
  }
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è HTTPS
 */
async function checkHttpsUsage() {
  log.section('–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è HTTPS');

  try {
    const packageJson = JSON.parse(await fs.readFile(path.join(rootDir, 'package.json'), 'utf8'));

    if (packageJson.dependencies && packageJson.dependencies.helmet) {
      log.success('–ü–∞–∫–µ—Ç helmet –Ω–∞–π–¥–µ–Ω –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è—Ö');
    } else {
      log.warning('–ü–∞–∫–µ—Ç helmet –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è—Ö');
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–ª—è Vercel
    try {
      const vercelConfig = JSON.parse(await fs.readFile(path.join(rootDir, 'vercel.json'), 'utf8'));

      if (vercelConfig.headers && vercelConfig.headers.some(h =>
          h.source && h.headers && h.headers.some(header =>
            header.key === 'Strict-Transport-Security'))) {
        log.success('–í vercel.json –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∑–∞–≥–æ–ª–æ–≤–æ–∫ Strict-Transport-Security');
      } else {
        log.warning('–í vercel.json –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∑–∞–≥–æ–ª–æ–≤–æ–∫ Strict-Transport-Security');
      }
    } catch (error) {
      log.warning('–§–∞–π–ª vercel.json –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –∏–º–µ–µ—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç');
    }

  } catch (error) {
    log.warning(`–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å package.json: ${error.message}`);
  }
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
 */
async function runSecurityCheck() {
  console.log(chalk.bold.green('\n=== –ü–†–û–í–ï–†–ö–ê –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò –ü–†–û–ï–ö–¢–ê ===\n'));

  try {
    await checkEnvVariables();
    await checkVulnerablePatterns();
    await checkSecurityConfiguration();
    await checkHttpsUsage();

    // –í—ã–≤–æ–¥ –∏—Ç–æ–≥–æ–≤–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    log.section('–†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–†–û–í–ï–†–ö–ò');
    console.log(chalk.bold(`–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –æ—à–∏–±–æ–∫: ${chalk.red(securityState.errors)}`));
    console.log(chalk.bold(`–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: ${chalk.yellow(securityState.warnings)}`));
    console.log(chalk.bold(`–í—ã–¥–∞–Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π: ${chalk.blue(securityState.suggestions)}`));
    console.log(chalk.bold(`–ü—Ä–æ–π–¥–µ–Ω–æ –ø—Ä–æ–≤–µ—Ä–æ–∫: ${chalk.green(securityState.passed)}`));

    const totalIssues = securityState.errors + securityState.warnings;

    if (securityState.errors > 0) {
      console.log(chalk.red.bold('\n‚õî –ü–†–û–í–ï–†–ö–ê –ù–ï –ü–†–û–ô–î–ï–ù–ê! –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —É—è–∑–≤–∏–º–æ—Å—Ç–∏.'));
    } else if (securityState.warnings > 0) {
      console.log(chalk.yellow.bold('\n‚ö†Ô∏è –ü–†–û–í–ï–†–ö–ê –ü–†–û–ô–î–ï–ù–ê –° –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–Ø–ú–ò! –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É—Å—Ç—Ä–∞–Ω–∏—Ç—å –æ–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã.'));
    } else {
      console.log(chalk.green.bold('\n‚úÖ –ü–†–û–í–ï–†–ö–ê –ü–†–û–ô–î–ï–ù–ê –£–°–ü–ï–®–ù–û! –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —É—è–∑–≤–∏–º–æ—Å—Ç–∏ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã.'));
    }

    console.log('\n' + chalk.bold('–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—é –ø—Ä–æ–±–ª–µ–º:'));
    if (securityState.errors > 0) {
      console.log(chalk.red('1. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –≤—Å–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —É—è–∑–≤–∏–º–æ—Å—Ç–∏, –æ—Ç–º–µ—á–µ–Ω–Ω—ã–µ –∫–∞–∫ "–û–®–ò–ë–ö–ê".'));
    }
    if (securityState.warnings > 0) {
      console.log(chalk.yellow('2. –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –∏ –ø–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —É—Å—Ç—Ä–∞–Ω–∏—Ç–µ –∏—Ö.'));
    }
    if (securityState.suggestions > 0) {
      console.log(chalk.blue('3. –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.'));
    }

    console.log(chalk.bold('\n–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:'));
    console.log('‚Ä¢ –†–µ–≥—É–ª—è—Ä–Ω–æ –æ–±–Ω–æ–≤–ª—è–π—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: npm audit fix');
    console.log('‚Ä¢ –ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ –∫–æ–¥ –Ω–∞ —É—è–∑–≤–∏–º–æ—Å—Ç–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞');
    console.log('‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ HTTPS –¥–ª—è –≤—Å–µ—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π');
    console.log('‚Ä¢ –ü—Ä–æ–≤–æ–¥–∏—Ç–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ –ø—Ä–æ–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–µ');

  } catch (error) {
    console.error(chalk.red.bold('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:'), error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏
runSecurityCheck();

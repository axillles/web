/**
 * –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
 */

import { env } from '../utils/env.js';

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
 * @returns {boolean} - –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏
 */
export function validateEnv() {
  const requiredEnvVars = [
    {
      name: 'VITE_SUPABASE_URL',
      critical: true,
      validate: (val) => val && val.startsWith('https://'),
      message: '–î–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–∞–ª–∏–¥–Ω—ã–º URL, –Ω–∞—á–∏–Ω–∞—é—â–∏–º—Å—è —Å https://'
    },
    {
      name: 'VITE_SUPABASE_ANON_KEY',
      critical: true,
      validate: (val) => val && val.length > 10,
      message: '–î–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ–ø—É—Å—Ç—ã–º –∏ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∫–∞–∫ –º–∏–Ω–∏–º—É–º 10 —Å–∏–º–≤–æ–ª–æ–≤'
    },
    {
      name: 'PORT',
      critical: false,
      validate: (val) => !val || (Number(val) >= 1 && Number(val) <= 65535),
      message: '–î–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º –º–µ–∂–¥—É 1 –∏ 65535'
    },
    {
      name: 'NODE_ENV',
      critical: false,
      validate: (val) => !val || ['development', 'production', 'test'].includes(val),
      message: '–î–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–¥–Ω–∏–º –∏–∑: development, production, test'
    },
    {
      name: 'TELEGRAM_BOT_TOKEN',
      critical: false,
      validate: (val) => !val || val.length > 10,
      message: '–î–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 10 —Å–∏–º–≤–æ–ª–æ–≤, –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω'
    },
    {
      name: 'TELEGRAM_CHAT_ID',
      critical: false,
      validate: (val) => !val || (!isNaN(val) || val.startsWith('@')),
      message: '–î–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º –∏–ª–∏ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å @ –¥–ª—è –∏–º–µ–Ω –∫–∞–Ω–∞–ª–æ–≤'
    },
    {
      name: 'COOKIE_SECRET',
      critical: true,
      validate: (val) => val && val.length >= 16,
      message: '–î–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 16 —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ–π –∑–∞—â–∏—Ç—ã'
    },
    {
      name: 'API_KEY',
      critical: false,
      validate: (val) => !val || val.length >= 16,
      message: '–ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω, –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 16 —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏'
    }
  ];

  let isValid = true;
  let missingCritical = false;

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
  for (const envVar of requiredEnvVars) {
    const value = env[envVar.name];
    const exists = value !== undefined && value !== '';

    if (!exists) {
      if (envVar.critical) {
        console.error(`‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è: ${envVar.name}`);
        isValid = false;
        missingCritical = true;
      } else {
        console.warn(`‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è: ${envVar.name} (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)`);
      }
      continue;
    }

    if (!envVar.validate(value)) {
      if (envVar.critical) {
        console.error(`‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π: ${envVar.name}. ${envVar.message}`);
        isValid = false;
      } else {
        console.warn(`‚ö†Ô∏è –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π: ${envVar.name}. ${envVar.message}`);
      }
    }
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∂–∏–º–∞ —Ä–∞–±–æ—Ç—ã
  const isDev = env.NODE_ENV === 'development' || !env.NODE_ENV;

  if (isDev) {
    console.log(`üîß –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã: —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ (development)`);
  } else {
    console.log(`üöÄ –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã: –ø—Ä–æ–¥–∞–∫—à–µ–Ω (production)`);

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
    if (!env.COOKIE_SECRET || env.COOKIE_SECRET === 'default-secret-key-change-in-production') {
      console.error(`‚ùå –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω —Ä–µ–∂–∏–º–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–¥–∞—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–π COOKIE_SECRET!`);
      isValid = false;
    }
  }

  // –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø—Ä–æ–≤–µ—Ä–∫–∏
  if (isValid) {
    console.log('‚úÖ –í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã');
  } else {
    console.error('‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è');

    if (missingCritical) {
      console.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è!');
      if (!isDev) {
        console.error('‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω —Ä–µ–∂–∏–º–µ —Å –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–º–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏');
        // –ü—Ä–µ–∫—Ä–∞—â–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω —Ä–µ–∂–∏–º–µ, –µ—Å–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        process.exit(1);
      }
    }
  }

  return isValid;
}
